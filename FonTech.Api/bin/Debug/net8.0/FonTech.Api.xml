<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FonTech.Api</name>
    </assembly>
    <members>
        <member name="M:FonTech.Api.Controllers.AuthController.Register(FonTech.Domain.Dto.User.RegisterUserDto)">
            <summary>
            Регистрация пользователя
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:FonTech.Api.Controllers.AuthController.Login(FonTech.Domain.Dto.User.LoginUserDto)">
            <summary>
            Логин пользователя
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:FonTech.Api.Controllers.ReportController.GetUserReports(System.Int64)">
             <summary>
             Получение отчётов пользователя
             </summary>
             <param name="userId"></param>
             <remarks>
             Sample request:
            
                 GET
                 {
                    "id": "1",
                 }
            
             </remarks>
             <response code="200">Если отчёты были найдены</response>
             <response code="400">Если отчёты не были найдены</response>
        </member>
        <member name="M:FonTech.Api.Controllers.ReportController.GetReport(System.Int64)">
             <summary>
             Получение отчёта с указанием идентификатора
             </summary>
             <param name="id"></param>
             <remarks>
             Sample request:
            
                 GET
                 {
                    "id": "1",
                 }
            
             </remarks>
             <response code="200">Если отчёт был найден</response>
             <response code="400">Если отчёт не был найден</response>
        </member>
        <member name="M:FonTech.Api.Controllers.ReportController.Delete(System.Int64)">
             <summary>
             Удаление отчёта с указанием идентификатора
             </summary>
             <param name="id"></param>
             <remarks>
             Sample request:
            
                 DELETE
                 {
                    "id": "1",
                 }
            
             </remarks>
             <response code="200">Если отчёт удалился</response>
             <response code="400">Если отчёт не был удален</response>
        </member>
        <member name="M:FonTech.Api.Controllers.ReportController.Create(FonTech.Domain.Dto.Report.CreateReportDto)">
             <summary>
             Создание отчёта
             </summary>
             <param name="dto"></param>
             <remarks>
             Request for create report:
            
                 POST
                 {
                    "name": "Report #1",
                    "description": "Test report",
                    "userId": 1
                 }
            
             </remarks>
             <response code="200">Если отчёт создался</response>
             <response code="400">Если отчёт не был создан</response>
        </member>
        <member name="M:FonTech.Api.Controllers.ReportController.Update(FonTech.Domain.Dto.Report.UpdateReportDto)">
             <summary>
             Обновление отчёта с указанием основных свойств
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request:
            
                 PUT
                 {
                    "id": 1
                    "name": "Report #2,
                    "description": "Test report2",
                 }
            
             </remarks>
             <response code="200">Если отчёт обновился</response>
             <response code="400">Если отчёт не был обновлен</response>
        </member>
        <member name="M:FonTech.Api.Controllers.RoleController.Create(FonTech.Domain.Dto.Role.CreateRoleDto)">
             <summary>
             Создание роли
             </summary>
             <param name="dto"></param>
             <remarks>
             Request for create report:
            
                 POST
                 {
                    "name": "User",
                 }
            
             </remarks>
             <response code="200">Если роль создалась</response>
             <response code="400">Если роль не была создана</response>
        </member>
        <member name="M:FonTech.Api.Controllers.RoleController.Delete(System.Int64)">
             <summary>
             Удаление роли с указанием идентификатора
             </summary>
             <param name="id"></param>
             <remarks>
             Sample request:
            
                 DELETE
                 {
                    "id": "1",
                 }
            
             </remarks>
             <response code="200">Если роль удалилась</response>
             <response code="400">Если роль не был удалена</response>
        </member>
        <member name="M:FonTech.Api.Controllers.RoleController.Update(FonTech.Domain.Dto.Role.RoleDto)">
             <summary>
             Обновление роли с указанием основных свойств
             </summary>
             <param name="dto"></param>
             <remarks>
             Sample request:
            
                 PUT
                 {
                    "id": 1
                    "name": "Admin",
                 }
            
             </remarks>
             <response code="200">Если роль обновилась</response>
             <response code="400">Если роль не была обновлена</response>
        </member>
        <member name="M:FonTech.Api.Controllers.RoleController.AddRoleForUser(FonTech.Domain.Dto.UserRole.UserRoleDto)">
             <summary>
             Добавление роли пользователю
             </summary>
             <param name="dto"></param>
             <remarks>
             Request for add role for user:
            
                 POST
                 {
                    "login": "User #1",
                    "roleName": "Admin"
                 }
            
             </remarks>
             <response code="200">Если роль была добавлена</response>
             <response code="400">Если роль не была добавлена</response>
        </member>
        <member name="M:FonTech.Api.Controllers.RoleController.DeleteRoleForUser(FonTech.Domain.Dto.UserRole.DeleteUserRoleDto)">
            <summary>
            Удаление роли у пользователя
            </summary>
        </member>
        <member name="M:FonTech.Api.Controllers.RoleController.UpdateRoleForUser(FonTech.Domain.Dto.UserRole.UpdateUserRoleDto)">
            <summary>
            Удаление роли у пользователя
            </summary>
        </member>
        <member name="M:FonTech.Api.Startup.AddAuthenticationAndAuthorization(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            Подключение аутентификации и авторизации
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:FonTech.Api.Startup.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Подключение Swagger
            </summary>
            <param name="services"></param>
        </member>
    </members>
</doc>
